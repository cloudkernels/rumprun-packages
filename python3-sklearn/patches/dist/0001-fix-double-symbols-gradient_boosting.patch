diff -urN build/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py ensemble/_hist_gradient_boosting/gradient_boosting.py
--- a/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py	2019-07-29 08:29:18.000000000 -0500
+++ b/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py	2019-11-14 10:44:01.286564914 -0600
@@ -12,7 +12,7 @@
 from sklearn.metrics import check_scoring
 from sklearn.model_selection import train_test_split
 from sklearn.preprocessing import LabelEncoder
-from ._gradient_boosting import _update_raw_predictions
+from .__gradient_boosting import _update_raw_predictions
 from .types import Y_DTYPE, X_DTYPE, X_BINNED_DTYPE
 
 from .binning import _BinMapper
diff -urN build/sklearn/ensemble/_hist_gradient_boosting/__gradient_boosting.pyx ensemble/_hist_gradient_boosting/__gradient_boosting.pyx
--- a/sklearn/ensemble/_hist_gradient_boosting/__gradient_boosting.pyx	1969-12-31 18:00:00.000000000 -0600
+++ b/sklearn/ensemble/_hist_gradient_boosting/__gradient_boosting.pyx	2019-11-14 10:37:00.409589620 -0600
@@ -0,0 +1,60 @@
+# cython: cdivision=True
+# cython: boundscheck=False
+# cython: wraparound=False
+# cython: language_level=3
+
+# Author: Nicolas Hug
+
+cimport cython
+from cython.parallel import prange
+import numpy as np
+cimport numpy as np
+
+from .types import Y_DTYPE
+from .types cimport Y_DTYPE_C
+
+
+def _update_raw_predictions(
+        Y_DTYPE_C [::1] raw_predictions,  # OUT
+        grower):
+    """Update raw_predictions with the predictions of the newest tree.
+
+    This is equivalent to (and much faster than):
+        raw_predictions += last_estimator.predict(X_train)
+
+    It's only possible for data X_train that is used to train the trees (it
+    isn't usable for e.g. X_val).
+    """
+    cdef:
+        unsigned int [::1] starts  # start of each leaf in partition
+        unsigned int [::1] stops  # end of each leaf in partition
+        Y_DTYPE_C [::1] values  # value of each leaf
+        const unsigned int [::1] partition = grower.splitter.partition
+        list leaves
+
+    leaves = grower.finalized_leaves
+    starts = np.array([leaf.partition_start for leaf in leaves],
+                      dtype=np.uint32)
+    stops = np.array([leaf.partition_stop for leaf in leaves],
+                     dtype=np.uint32)
+    values = np.array([leaf.value for leaf in leaves], dtype=Y_DTYPE)
+
+    _update_raw_predictions_helper(raw_predictions, starts, stops, partition,
+                                   values)
+
+
+cdef inline void _update_raw_predictions_helper(
+        Y_DTYPE_C [::1] raw_predictions,  # OUT
+        const unsigned int [::1] starts,
+        const unsigned int [::1] stops,
+        const unsigned int [::1] partition,
+        const Y_DTYPE_C [::1] values):
+
+    cdef:
+        unsigned int position
+        int leaf_idx
+        int n_leaves = starts.shape[0]
+
+    for leaf_idx in prange(n_leaves, nogil=True):
+        for position in range(starts[leaf_idx], stops[leaf_idx]):
+            raw_predictions[partition[position]] += values[leaf_idx]
diff -urN build/sklearn/ensemble/_hist_gradient_boosting/_gradient_boosting.pyx ensemble/_hist_gradient_boosting/_gradient_boosting.pyx
--- a/sklearn/ensemble/_hist_gradient_boosting/_gradient_boosting.pyx	2019-07-29 08:29:18.000000000 -0500
+++ b/sklearn/ensemble/_hist_gradient_boosting/_gradient_boosting.pyx	1969-12-31 18:00:00.000000000 -0600
@@ -1,60 +0,0 @@
-# cython: cdivision=True
-# cython: boundscheck=False
-# cython: wraparound=False
-# cython: language_level=3
-
-# Author: Nicolas Hug
-
-cimport cython
-from cython.parallel import prange
-import numpy as np
-cimport numpy as np
-
-from .types import Y_DTYPE
-from .types cimport Y_DTYPE_C
-
-
-def _update_raw_predictions(
-        Y_DTYPE_C [::1] raw_predictions,  # OUT
-        grower):
-    """Update raw_predictions with the predictions of the newest tree.
-
-    This is equivalent to (and much faster than):
-        raw_predictions += last_estimator.predict(X_train)
-
-    It's only possible for data X_train that is used to train the trees (it
-    isn't usable for e.g. X_val).
-    """
-    cdef:
-        unsigned int [::1] starts  # start of each leaf in partition
-        unsigned int [::1] stops  # end of each leaf in partition
-        Y_DTYPE_C [::1] values  # value of each leaf
-        const unsigned int [::1] partition = grower.splitter.partition
-        list leaves
-
-    leaves = grower.finalized_leaves
-    starts = np.array([leaf.partition_start for leaf in leaves],
-                      dtype=np.uint32)
-    stops = np.array([leaf.partition_stop for leaf in leaves],
-                     dtype=np.uint32)
-    values = np.array([leaf.value for leaf in leaves], dtype=Y_DTYPE)
-
-    _update_raw_predictions_helper(raw_predictions, starts, stops, partition,
-                                   values)
-
-
-cdef inline void _update_raw_predictions_helper(
-        Y_DTYPE_C [::1] raw_predictions,  # OUT
-        const unsigned int [::1] starts,
-        const unsigned int [::1] stops,
-        const unsigned int [::1] partition,
-        const Y_DTYPE_C [::1] values):
-
-    cdef:
-        unsigned int position
-        int leaf_idx
-        int n_leaves = starts.shape[0]
-
-    for leaf_idx in prange(n_leaves, nogil=True):
-        for position in range(starts[leaf_idx], stops[leaf_idx]):
-            raw_predictions[partition[position]] += values[leaf_idx]
diff -urN build/sklearn/ensemble/setup.py ensemble/setup.py
--- a/sklearn/ensemble/setup.py	2019-07-29 08:29:18.000000000 -0500
+++ b/sklearn/ensemble/setup.py	2019-11-14 10:37:29.089656200 -0600
@@ -13,8 +13,8 @@
 
     # Histogram-based gradient boosting files
     config.add_extension(
-        "_hist_gradient_boosting._gradient_boosting",
-        sources=["_hist_gradient_boosting/_gradient_boosting.pyx"],
+        "_hist_gradient_boosting.__gradient_boosting",
+        sources=["_hist_gradient_boosting/__gradient_boosting.pyx"],
         include_dirs=[numpy.get_include()])
 
     config.add_extension("_hist_gradient_boosting.histogram",
